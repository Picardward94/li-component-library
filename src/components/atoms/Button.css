import React from 'react';
import styled from '@emotion/styled';
import Button from '@mui/material/Button';
import IconButton from '@mui/material/IconButton';

// Define styles for the button based on props. Here we're using static CSS, but you can replace with your token values.
const StyledButton = styled(Button)`
  &.MuiButton-root {
    &.primary {
      background-color: blue;
      &:hover {
        background-color: darkblue;
      }
    }
    &.secondary {
      background-color: gray;
      &:hover {
        background-color: darkgray;
      }
    }
    &.danger {
      background-color: red;
      &:hover {
        background-color: darkred;
      }
    }
    &.disabled {
      background-color: lightgray;
      pointer-events: none;
    }
    &.loading {
      background-color: lightblue;
      pointer-events: none;
    }
    &.small {
      padding: 4px 8px;
      font-size: 12px;
    }
    &.regular {
      padding: 8px 16px;
      font-size: 16px;
    }
    &.text {
      padding: 0;
      background-color: transparent;
    }
  }
`;

// Button Component
const CustomButton = ({ 
  type = "primary", 
  size = "regular", 
  showText = true, 
  textValue = "Button", 
  showLeftIcon = false, 
  showRightIcon = false, 
  leftIcon, 
  rightIcon, 
  ...props 
}) => {
  if (size === "text") {
    return (
      <a href="#" className={`${type} ${size}`} {...props}>
        {showText && textValue}
      </a>
    );
  }
  
  return (
    <StyledButton className={`${type} ${size}`} {...props}>
      {showLeftIcon && <IconButton>{leftIcon}</IconButton>}
      {showText && textValue}
      {showRightIcon && <IconButton>{rightIcon}</IconButton>}
    </StyledButton>
  );
}

export default CustomButton;